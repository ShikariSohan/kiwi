import { Message } from '../../types';
import type { NextApiRequest, NextApiResponse } from 'next';
import axios from 'axios';
import jsPDF from "jspdf";
import { uploadToFileFirebase } from '../../config/firebase';
import { cp } from 'fs';
export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<String>
) {
  const method = req.method;
  switch (method) {
    case 'POST':
    const {title,story,profile,token} = req.body as {
      title: string;
      story: string;
      profile: any;
      token : string;
    };
    console.log({title,story});
    const splitStory  = splitParagraph(story);
   
    const replyUrl = process.env.BOT_SERVICE_BASEURL+'/api/bot/complete';
    let imagePrompt = [];
    let pre = "Remeber you are dealing with a child. Age is "+ profile.age + "years old. And gender is "+ profile.gender +". ";
    for(let i = 0; i < splitStory.length; i++) {
      const imgPrompt = ` ${pre} Generate only one prompt from the passage for a text-to-image model that can generate related and appropriate one image from the given prompt.  used for an AI model that hates unsafe content. The prompt should be able to with no names of any character of the story, and should be in a way that the images seem to be in a similar genre.Make it more fantasy and kids theme . Here is the prompt provided by the user: ${splitStory[i]}`;
    const message: Message[] = [{ role: 'user', content: imgPrompt }];
        const resBody = {
          messages: message,
          model: 'gpt-3.5-turbo',
        };
    const botResponse = await axios.post(replyUrl, resBody);
    const data1 = botResponse.data;
        imagePrompt.push({
          prompt: data1,
          text: splitStory[i]
        })
         
      }
 let promptBody = [] 
 for(let i = 0; i < imagePrompt.length; i++) {
  promptBody.push(imagePrompt[i].prompt);}
    
   let pdfUrl = process.env.PDF_SERVICE_BASEURL+'/api/bot/genarateimages';
      let imageUrls;
   try{
    const data = await axios.post(pdfUrl, {
      prompts : promptBody,
    
    },{
      headers: {
        
        "Authorization": token,
      }
    });
    imageUrls = data.data;
   }
    catch(err) {
      console.log({err});
    return  res.status(500).end();
    }

   const url =  await genaratePdfs(imagePrompt, title,profile,imageUrls);

   const botUrl = process.env.PDF_SERVICE_BASEURL+'/api/bot/pdf';
   const botBody = {
    url : url,
    userId: profile.id,
    title : title,
    description : story
   }
  try {
    console.log({token});
    const data = await axios.post(botUrl, botBody,{
      headers: {
        'Content-Type': 'application/json',
        'Authorization':token
      }
     });

    console.log({data});
    res.status(200).end();
    }
    catch(err) {
      console.log({err});
      res.status(500).end();
    }
    
    break;
    default:
      res.status(405).end();
      break;
  }
}
let logo = `iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAACAASURBVHic7N13mBX1vT/w93dmTt3GVtild6WJIkVAY4uxJcayK6Dyi43kaowBLDG5iZubXGOMisabGEvUqKDsookajbFEY4LYaSIdFoRdYNm+p8/M9/cHkEu4tGXPnM935nxez5Mnz+OT7Lw9Z858P/OtAGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMZS9BHYAx5qyayko9NdiXDwDBuBaEsEMAkBJaniZsAwA0W8YFRAwALDPVkcrxmT6Zsqt+WdtGl5wx5iQuABhziZpbK3tpll4upV5qa3axBpTYUhQLoFhAFEvIYgClAIoB5AEoAKCl6fIJABFINEGgCVI0SSGbNIkmKWSTlFoThN2oaXqTtGRT0sSWKx+a356mazPGHMAFAGOKmP+DGYWBhKywIMqFhkFCYpAEBmHPf4ZhT6PuJi0AGiBQDxubpMAmDXv+O6AH1110zxMd1AEZy2ZcADCWYTU3VZYKn38MgNGAPVpCjMGeBj6fOFqm7QTwhQBWQsiV0hYr4rq+aua9z0SogzGWDbgAYMwhj8ya5SvObR8loY0GMFoCYwAxBpC9qLMpzAawCcDyPYUBVkpbW1E579mNApDU4RjzEi4AGEuTZ2+6It9nyAkQmCoEpkBiCoAQdS6PaIfAR1JiMST+KZBaXDWvNkYdijE34wKAsWP03G3TKgxTmwJgqgSmADgR6Zt0xw7PxJ5egsUAPpWW8W7Vg09vpQ7FmJtwAcDYUaq5tbIXLN+5AM4FcAaAMuJI7N+tk0K8Bdt+PaEbf+O5BIwdHhcAjB1CTWWljn6+sVLibAF8HcBk8G/GLUwAH0rgFSHwVuV9Cz7jOQSM/Tt+mDG2n5rZM3sD5rmAPBdCnA2gB3UmlhZbJMTrEPbrIma+VfXb2k7qQIxR4wKAZb0Fc6eXGBCXQGIm+C0/GyQAvCmAWr8R/CPvR8CyFT/oWFZ68caZxVbAvEACldgzpm9QZ2Ik4gDeEkCtjKde5J4Blk24AGBZo2Z2ZZEQvgu50WeHEAPwtgBqY5r+Ak8iZF7HBQDztHeqTzd2dZRfKGztOgh5LgCdOhNzhXYBudAS2mPT7pv/MXUYxpzABQDzpBduu6KPacorBHADgH7UeZibidUS8g++hPH4Jb95uok6DWPpwgUA84ya6kq/aPddJIGZAM4Dv+2z9EoAeFlKPFo1b8HbvKyQuR0XAMz1np9z+TAhtFlCipnYcxwuYw4TqwH7cUjzqap5tc3UaRg7FlwAMNdaOHfGaULKuYC4ELwFL6MRAfCkrVsPTPvVwo3UYRjrCi4AmKtUV1drx7etvUBo4g5InEKdh7G9bACvSVvcffkD8xdTh2HsaHABwFyh5obKXIR8MyAxF8Aw6jyMHcanAvh1SX79gjOq3zWpwzB2KFwAMKXtPXHvexL4NnhbXuYuG4SU8yTMJ/noYqYiLgCYkmpuqiwVPt9cCXwPQIg6D2Pd0CiB+4RM/ZoLAaYSLgCYUl68cWZxKmDeJIA5APKo8zCWNhLboOHe3GTL785/6C8J6jiMcQHAlPDSbdfkxc34DQK4A0ABdR7GHLQVAv9dmlf/BM8RYJS4AGCkam6ozJVB340CuB1AIXUexjKoDgK/wNbU76tqay3qMCz7cAHASNRUV/rRbnwXQvwQEsXUeRgj9AU0+7aqe59/lToIyy5cALCMWzh7xtlC4AEAI6mzMKaQtyHF7Kp581dSB2HZgQsAljE1N185HJq8D0JeQJ2FMUWZkHgCZuo/qx6qbaQOw7yNCwDmuPk/mFHoT+J2CcwG4KfOw5gLtEDgp6V59b/hiYLMKVwAMMe8U3260dhRcQ0kfg4+pIexrhNYKyXmXH7/gteoozDv4QKAOaJ2zrTJEuIRQIyizsKY+8k/Qvpuqpr39HbqJMw7uABgafXKrFnheG7nTyRwCwCdOg9jHtIGgTu/yBv2UHV1tU0dhrkfFwAsbRbOmXG+AB4G0I86C2Metti2reunPbBwNXUQ5m5cALBue/GWq8os235AQk6nzsIA6IAWtIGghPDbEMbef+6XgJAQAhB+ueefGRKwBWADUgIyufeRYAEwNQB7/1lKwI4JyIS25+BbRi0OyJ+3dObd8+1HH01Rh2HuxAUA65baOTNmSoH7eTMf54mghJZvQeTZ0PItaHk2RNCGCEmIoA0ttLfR90lHc8i4gIxrkHsLAjumATEBq0OHbNcg23VY7Rpg8uMlA1ZC4rqqeQs+og7C3Id/oeyYPDdnWl8d2uMAzqHO4iXCL6EVm9BLLGg9rD0Nfv6eBv9fb+0uIaMCdrsBe19R0KLDatJhNxnci5BelpD4dWeB/4dXVz8Vpw7D3IMLANZlC+dMv1RAPAqgiDqLa2mAlmdBK7Sgl5nQiy1ohSa0Isv7v0obsDt0WM067F3Gnv9uNmC36IC7ahzFiNWw5YyqBxYso07C3MHrjxqWRi/ddk1eIhW/FwKzqLO4jk/C6GVCL09Br0jBKDf3jL+zf5FJAWunAaveB6vBB7PB4GGErktI4M7V+cN+xSsF2JHwr4sdlefnXDFJg5wPYBB1FjfQCiwYFSlo5SaM8hS0wix4s083C7B2GTB3+P5VFMgYf4hH6a+6rV196QPPNlAHYeriXxM7rJrKSl329d0igJ8B8FHnUdbeN3xjYBLGwAS0fH75coLdpCNV54f1pR/mdh/PJTi83ULiusp5C16iDsLUxAUAO6QX5s7ob0n5DCBOpc6iIq3AgjEguafRr0jxtkcZJlMC5jYfrM1+mFv8sDs16khqkngmruv/MfPeZyLUUZhauABgB7V3ot8TAPKpsyhDAHp5Cr6hSfgGJSFyLepEbD/WbgPmBj9SGwJ7JhSy/YjVtm1eypsHsf1xAcD+zd4u/x8L4Cfg+wMAoBVZ8A1JwHd8Alo+N/puYDfpSG0IILUuALuVi4G9OgVwTeX9C2qpgzA18AOe/cuCudNLDCmeB3AWdRZqek8TviEJGEOT0PK40Xcza5eB1PoAUusDkB1ZP0wgJeSvxJfmD6tqa/nGznJcADAAwPPfv/IkTbNfADCAOgsVEbDhG5KEb0wcegkfwe45ErB2+JBaHUBybSDblxi+Z1qyasaDz+2kDsLoZPUvgO1RO2fGTAn8DkCIOgsFvcyEb1Qc/mEJwOFtdJkaZEIgtSGA5PLgnp0Js5HENluIymn3z/+AOgqjwQVAFnvtpvMCEV/hPRL4HnWWTNPCNoyhCfhHxqEVc09oNrN2GUh9HkRqXQAylXWPxAQEbq+6b8GD1EFY5mXd3c72WHDz9J6Gpr0EISdSZ8kkrdhE4MQ4fMPjQNYPB7P9ybiG5IoAkitCkLHsujmEwO9K8upvOqP6XR77yiJcAGShmtlXDgHs1yAwlDpLphgVKfhOisE3IMl3PTs8G0itCyDxWRh2U1atIHgTvlRl1S9r26iDsMzgR2GWWfj9K6YITf4JQAl1FqcJTUIflERgXAx6Gb/YsC6SgLnNh+SyEMw6P3WaTFkJy7iw6sGnt1IHYc7jAiCL1MydcRUkHgfg7aeZIREYFYf/xDhv1sPSwtplIPFxGOZmv/dPLJTYZgvtwmn3P7ucOgpzFhcAWaJm7oybITEPXv7ONcB/fByBCTFu+Jkj7CYd8Y/CMDcEqKM4rROaPa3q3udfpQ7CnOPdxoABAN6pPt1obKv4jZeP8BWahDE0icDEKLQCbviZ86wdPiQ+9vzQgCWk/F7lvOd+Sx2EOYMLAA+rub2yAEnfixA4kzqLIzTAPzwO//gYN/yMhLXdh/iSMKwGDx+UKcXdlfPm/1B4f/Aj63AB4FEv3jiz2AyYrwM4mTqLE4z+SQSmRqAXccPP6Jl1PsT/mevZQ4gkxCOr84feUF1dzQcwewgXAB60Z42/eAMCY6izpJvWw0LwlCiMIQnqKIz9G2kLpFYHkHg/DBn33j4CAuK5kvztM3mvAO/gAsBjnpszra8O7S0Aw6izpJMI2PCPiyEwNgZ48yWLeYSMCyQ+CiO5IuS9TnOBVyJ5/qqrq5+KU0dh3ccFgIc89/1pA3RNewvAYOosaSMA37AEgqdGIELc+8jcw27REf9HLswtXpsfIF6HTF5SNa82Rp2EdQ8XAB7x/PcvP17T9LcAVFBnSRe9p4nQWR28Vz9zNXNDALH3ciAjHhoWkPLdgC/0jYvueaKDOgo7dlwAeEDN92eMhYY3AJRSZ0kLn0RgfBSBE2O8Xz/zBJkUSHzguWGBT4yEce4lv3m6iToIOzZcALhczdwZ4yDxJoBC6izpYPRLInhGJ7R87u5n3mNu8yH+t1zYbR6ZyCKwDHbqrKp5tc3UUVjXcQHgYs/fctUoTVrvQqKYOkt3iYBEYEoE/hFxviuZp0lLIPlJCIlPwoA36tyPAkbwbB4OcB9+1LrU83MuH6bB+Dsge1Fn6S7fsASCp3VChLzTN8rYkdiNBqJv58JuNKijpMN7oc7c877+6KNR6iDs6HEB4EJ7l/q9B2AAdZbuEH6J4Omd8A3nNf0sS9lA4uOwN3oDBN6K5Pm/zksE3YMLAJdZcPP0noYh/g6J4dRZukPvlULonA5oBW5/6jHWfeY2H2Jv5HlhpcBLpfn1l/FmQe7ABYCLLJg7vcSQ4u8ARlBnOWYCe2b4j4/yDH/G9iOTAvF3c5Fa6/KTBqVchG3mtKraWl6/qzh+BLtEze2VBYYUr8PFjb+WbyF8SRsCE7nxZ+xAwi8ROqcDoa92QPhcPB9GiMvQ1/e45BdM5XlkLYq3vTJrVtj0WW8AmECd5Vj5j48j9PUO6D34pYCxw9FLLPiGJmHW+yCjrq2Ux66aPCp30ZLP36AOwg6NCwDFVVdXa4V2w3MAzqHOckwEEJgcQXBqFILvNsaOighK+I5PQEY0164SEBCTqyaPaq5d8vlH1FnYwbm2vMwWx7evvQ8Cl1DnOBYi10LOpa0IjOMtwxnrKqFLhM7qRPDMTtc+qaUUD9TOnnERdQ52cDxGo7CauTNmQeIR6hzHQq9IIXxeO0TYxWOZjCnC2mUg+lo+ZIcrK4GoptlnXnbv8x9SB2H/jgsARS2cM+N8AbwEwHX9f/6RcQROj0Bo3Pgzli4yriH2eh7ML115umCDLnDKpfct2EIdhP0vLgAUtHd//78DyKHO0iXGni5L3zDe2IcxR9hAfHEOkstC1EmOgfwcPnNq1S9r26iTsD24AFBMzeyZvQHzAwj0oc7SFSJkI3xBB/TyFHUUxjwv9UUQsb/luu9kQSnfRYH5tarq2iR1FObaqSXeVHN7ZQGE+Ve3Nf5aoYWcylZu/BnLEN+IOMIXtrtvvwAhThftxsPUMdgeXAAoQgICSd8TAEZSZ+kKvdxEzqWtvKUvYxlmDEgip7IVWq67fnsS4pqFc2Z8jzoH4yEAZdTMnv4TCPFT6hxdYQxJIHROJ4TusrcQxjzEjmiIvZIPy137BZhS4KzL71vwHnWQbMYFgAJqZk8/F0K8Chf1yATGxxCYGOE7iDEFyKRA7LV8l60QEDsswxo3/Z7n66mTZCt+fBN7Ye6M/pbEJwBKqLMcFQEEpkYQGMub+zCmFBuIvZ6H1EZXHSb0AfJTX+FJgTRc88bpRU9WfytoSbwAFzX+oTM7ufFnTEUaEDq3A74RrlqGOwntvvuoQ2QrLgAIhTuSvwUwjjrHUdGA4Fmd8I2IUydhjB2KBoTO7ID/BFcV6d+tnT39auoQ2YiHAIjUzJ7xXQg8RJ3jqGhA+Nx2GIO5l44xV5BAYnEOEktds2FQHAJTq+5b8Cl1kGzCBQCB5+dcMUmD/DsAP3WWIzIkwue3w+jPa/wZc5vEhzlIfOSaImATfKmTeKfAzOEhgAx76bZr8jTI+XBB4y98Ejnf4MafMbcKTIwgMDlCHeNoDULK91vqENmEC4AMS1qxhwAMos5xRBoQOq8Dem9u/Blzs8C4GAITo9QxjtaMhXOmX0kdIlvwEEAGLZwz/VIBsYg6x5EITSJ4fgd8A3nMnzGvSLyfg8SnrhgO6ITUTqya9+wG6iBexz0AGfLCbVf0ERCPUuc4Ig0IfrWTG3/GPCZwSgS+Ma5YxZMLYT9VU1mpUwfxOi4AMqC6ulqzUvIPAIqosxyWAEJn8HG+jHmSAEKnuWYp7xT0MX5EHcLreAggA2rmTv8BpPgFdY7D2vdwcMcbAusi25JYs6wNKz9qwZZ1ndi1PY5E3AIA5Ob7UN4vhEHH5+GEyUXoOziHOC1zlA1E38yDuU75HQNN2PK0qgeeW0IdxKu4AHBYzdwZ4yDxPhSf9R+YHEFgnKs2D2FHoXlXAn96civeerEezbuOrmdn4HF5OH96H3ytqjf8Qe4k9CQbiP65AOYW5c8O2BQwgmMvuueJDuogXsRjLA6qmV0ZgtDfANCTOsvh+EfHEZzsmlnC7Cgk4zaefXAjfnHTCqz4sAWxiHXU/9/W3Ul8/O5u/LV2OwpLAxgwPA+CXxW8RQC+QUmYW/yQUaWLvEJTmr0WLVn5EnUQL+ICwEGVp5z4MwDfpM5xOEb/JEJf7eC+IA+pW9eJO676FItf3wnLOvajmmMRC4v/ugub13Rg3Gkl8AeUbihYV+mAMTAJc4MfMqnudyuAE6smjVlS+8HKjdRZvIYf+w5ZdMv0MbYtPgGgbB+bXmQiXNkG4T/2RoKpZeWHLbjzuqWIdppp/bv9huTgv58eh9LyYFr/LqNnN+mIvFAAmVC3CACwBfHUqKrf1nZSB/ESpb9xt6qprNRtW/weCjf+Wo6N0EXt3Ph7yJqlbfjxNZ+lvfEHgK0bIrht+idoaeQVIl6jFVsIndup+utgfxkyqqlDeA0XAE7oY8wBcDJ1jEPySYS+0Q4t16ZOwtJk1/YYfnzNZ4hHj36sv6satkTxs/9YDtPkotFrjH5JhM5Q++VaSPH9RbOnqftcdSGeA5BmL8yeMUgKUQNV3/4FEL6wA0Y5b/HrFdKWuPO6pdi2yfmJnI0NcUgJjJ2s9pYWrOv0MhOwBKwGNR9dADQpMPHs0ZN//+dPP+W3lzTgHoA0swR+ByBMneNQAlMiMPrxLn9e8kZtPVZ90pqx69U+Uodtm1xzwAzrgsApERj9VX4+iBOKciO3UKfwCi4A0qh29vSrAXyVOseh+AYlERjLa/29xDQl5j+0KbPXTNlYkOFrsgwRQOhrHdAK1H3BlpB3Pv/9y4+nzuEFXACkyYKbp/eUQtxLneNQtCILoXN4uZ/XLH59J3Ztz3xR9/dXdqBpJ08I9CIRkAif1w4Yys71CGhC+63kp1m3cQGQJj4dd0HVvf59e3/QPmV/0OwYvf3HBpLrWpbEuy/TXJs5Tys1ETpT4UmBQpy+aPaMy6ljuB0XAGmwaM60EyXEt6hzHJQAQl/thFbk3OxwRsNM2Vi+pJns+p++10R2beY83/CE0meDSOBXT99yFR9c0Q1cAKSBDe0BKPpZ+sdF4RvMXbVetGFVBxIxusLui89aIblTydOCp0agVyi6YkigT8i2eEJgNyjZaLnJwtnTqwCcRp3jYIyKFIITeY9/r6KeiR+PWti9Q903RNZ9QpMIn9sBEVSz0pPAbS/cdkUf6hxuxQVAN9TMrgwJIX5JneNghF/umfTH37Bnte6mX67VokAG5iyRY6s8HyBsmVLJZ7AbcPPQLcatAAZQpziY4OmdEHnqLuVh3efkrn9HK+bAtsNMPcbgBPwjlO3tmV4zd/pU6hBuxAXAMaqZPbM3hLiNOsfB+IYn4BvO4/5ep8L4u+QaM2sETotA60FfdB6EgBQPVldXc3vWRfyBHSMpzF8CUG4GqpZvIXi6st11jDGXEj6J0Nc6IDQFKs//66SR7euupA7hNlwAHINFs6edLIAZ1Dn+Dw0IfrWTT/hjjDlCLzPhn6DmxGIJeVfN7MoQdQ434QLgGNjQ/gsK7kIVGBeFoeqSHcaYJwTGxRRdGih6S833HeoUbsIFQBfVzpk2GQLnUec4kFZswj+B9/lnjDlM27O5mFBwZ1Eh8cOXbrsmjzqHW3AB0EVSaj+jzvB/CCB0RqeqY3OMMY/R8i34xys5FFASN+M3UIdwCy4AuqBm7vSpEDiTOseB/GNj0Mt5ORZjLHMCJ8agl6n33BECtz570xX51DncgAuArpDi59QRDiTybAR4tz/GWKZpQPAsBXseJYp9PnkzdQw34ALgKNXOvuIcAF+hznGg0JlqjsUxxrxPLzHhG6veBkECmFszu1LN01kVwgXAUZJC/pQ6w4H8x8dh9OOtWBljdIITo9AKlNsgqEBqvtnUIVTHBcBRqJ1zxYUAJlHn2J8I2QhM4a5/xhgxQyJ0Bu3BVAcjJG5eMHd6CXUOlXEBcBSkxH9SZzhQ4JQoRIj3YWWM0dP7JmEMUW778TwdgucCHIZBHUB1tbOvPFUKeyJ1jv3ppSb8x6s37qaKVNJGfV0UzY0JxCIWQjk6cvN96D0wjHCud255ocBWVMJjrxAtu5Oor4siFjFhWRKhsI6y3iGUVQSh6Qp84AoLnhpB5xY/kFLncxISNzx9y1V3z7z3GfW6KBTgnaehQ6Sw51JnOFDw1Aj33RygYWsM77zUgI/eacT6Fe2wrP87MVIIoO+QXJw0tQinf6Mcx40tIEiaPoGQTh0BoRz6DN1hmhIfv9OI917dieVLmtG86+BvsaEcA6PG98Dkr5Xh1PN7ITefH50H0nJtBMbGkfhYqd14iwK2/S0Av6EOoiJ1SjUFLbp1xlDbwhoo1NwaQxIIn9dBHUMZdes68cy8jXj/jV2QdtdWQxw3tgBX3DwY40935zDhG7Xbcf9tq0gzPPXeqejVV6kH/lExTYlXn/0Six6tQ2ND13rTQmEd583og+k3DkJeD59DCV0qJdA5vwfsDqUKw834MjW0qrZWuZmK1JRp2FQkbcyBQp+R0CWCU7gnCwDMlI3f370ON56/BItf39nlxh8A1ixrw4+v/gw/nbUMbc3uW03ReyDtYZT+gIayiiBphmOxfmU7bjh/CR7+6ZouN/4AEItaePHxLbj2zH/inZcaHEjoYj6JwCnKTU4eKPsa36QOoSJlGjfVvHjjzGIpcRV1jv35T4pDy+eJf61NSdxS9TFqH6k7aFd/Vy15cxduOH8J1q1sT0O6zBkyMg8+P91PePgJBa4bF//rwu2Yc9lH2Lq++0dmt7ek8Mvvr8Svf/QFLJP34tjHNywBvadaOwQKiNupM6iIC4BDMP2pGwHQvmLtR8ux4R+nXGWdcU07E5h72UdYs6wt7X/39mkfY9n7zWn9u04KhHSMHN+D7PonnVpMdu1jUftIHR64YxVSyfQW0a8t2Ib/vnE5TC4C9hBA8LSIagPM42vnTJtMHUI1XAAcxGs3nReA0P6DOsf+AhOiWb/jX6TDxI/+36fYXudMIRSLWrjzuqWuKgLOvKic5LpCAGcQXftYLHx4M35/9zpIh35C77+xCw/eQTsfQyV6rxSMQWoNq0mpKTehmxoXAAcR8fX4FiB7UefYR+TZ8I3gZX8P/ecXqFvb/a7bw0nELPzk2s+wdHGTo9dJl9O/UY6iskDGrzvp7DLXTP5b9FgdnrxnvePXeXNRPV5bsM3x67hFcKJivQAC31x064yh1DFUwgXAQUiIG6kz7C8wIZr139R7r+7Auy/vyMi1knEb1dcvc0VPgD+g4bJZAzJ6TU0XuOJ7gzJ6zWO18OHNePyudRm73iM/X4td9VysA4BWbME3VKnNgTTLknxU8H6yvFn5v56fc8UkAKOpc+yjFVjwH5fdDxQzZWf0IQ7s6Qlwy3DAN/5fPww8Li9j17vwir4YMkr901YXPrw5I2/++0vErIxfU2WBSVGlegGEEFc9Wf0t9y1dcQgXAAfQYV9PnWF/gYn89v+3PzWQvFW5pQgwDIEfPDg6IxsDDR2dj+vuGOb4dbqLovHf5+9/3oGGLTxhF9jzAuMbrlAvgERxuCNxMXUMVWR50/Lvam6ozJUQldQ59tGKlOtCI0E5rvqvImCx2kVA/2G5uOOhMdAdXJZXVBZA9aMnwh9U+7GRqTH/Q7EtiTcW1ZNdXzWBiWrtXCpscR11BlUo9LXQkwH/lQAy15d6BEF++8eu+jjWLk/vkr+uSsQs3Hm9+j0Bk84qxe0PjobhS/9NU9E/jLvnn4ziXpmfcNgVmR7zP5R/vLaTOoIytHxbrbNLBM7gyYB7ZHnz8u+EkMpUhlqxBWMwv/2v/LDZsaVbXeGW4YDTLuiFXzw7DsU909dQj51ShAf/NBH9hiizLcZBUXb7H2jbpgiadvLvd5/AeKXmAghp4VrqECrgAmCv5+dceQKAcdQ59gmMVeoHQ2bjF+qce7CvCFi+RO0iYPSEQjz8l8n4WlXvbp0YGArruO6OYfjvp8Ypv+d97SO03f4Hs0mhe5eayLOVGs6UwLcemTVL7Zs6A7gA2EsX9neoM+yjhW0Yw9XaRIPKji9j1BH+TSJm4aezlmHjKrUf7vmFPsz+5Ug8/PpknHVxRZfG7QtLA7j8hoF46h+n4rJZA6Abaleif3l+G35/N323/4EavuSJgPvzn6jUb7lnYU7kQuoQ1PhMSwA1sytDUmIadY59fCfEIXQF+r0VEO1Qa09xAIh2mqi+fil+8+opyC9U+yViwLBc3Hr/KNz4X8fh0380YeUHLdiyvhO7sJJhoAAAIABJREFU6uOItKeg6wK5BT706hfCkJH5OOGUIoyeUKh8o7/P2uVt+M2PV1PHOKhIu3r3LiW9zITRJwVzmyq/GXk9gD9Sp6DEBQAAaL7LIEG3qfp+hE/CP1KhCTPEVBj/P5jGhjh+919rcNs8ZbaMOKxwroFTz+uJU8/rSR0lbZJxG3d/b4Wye/Creu9S8p8YhbmtgDrGHgJfq5k9s3fVvKe3U0ehwkMAAKDS2//xCYgQn/i3TyhHqXPF/807LzVg1Set1DGy1qLH6tCwValu5X8TzuX3qwMZ/VPQiizqGPtoQljKLPumkPUFwPwfzCgEcDZ1DgCAAPxj1X2gUejZW9395qUEnvufTdQxslI8auFPT26hjnFYbjkrIaMEEFBoLoAUsoo6A6WsLwD8CflNAH7qHABgDEpCK1CmOlbCwOOV2ZbhoD59bzfv+kbg3Vd2oL0lRR3jsAYMz6WOoCRjeAJaWJFeTolJNTfP7Ecdg0rWFwBSCGW6/wOjeez/QKMnFFJHOCwpgfd405eMe/flBuoIh1VWEeQegEMQuoShzummQupm1vYCZHUBsGDu9BIAZ1LnAPbsma334aV/B+o9MIwBw9R+k1J9m2CvSSVtfPGp2nMvpnposqUT/CMTyuxzIgAuALKRAXEJFFkJ4RsZV+YHoZqvXd6bOsJhrVtBu1Vxttm8thPJhCJdyAchBHD2pRXUMZSm5Sv1wjP++VsvH0wdgkJWFwCQilR+AvAdp84uWao5d1ofpdfbRzpMtDYp8zDzvPrNas+5OPkrJRik+NwVFfhHqPPME5Z+GXUGCllbANTcVFkK4CvUOQDAGJSAlqPuGw21UFjHzNlDqGMcVker2hPSvETlz1rXBa79gfrHJavANyQBEVJjs4RsHQbI2gIAPt9lUKT73z9SnUpYVefP6IMxk4qoYxySmeICLlMsS41G42Cmf3cQz/4/WhrgO06ZyYAn1cy+Uu23DAdkbwEg8XXqCACg5dow+nL38ZFousDtD4xGSa8gdZSDCoaVqCWzQjCs5uZQ404txoybBlHHcBW/QnOfhJBZdzZAVhYANbMrQxBqdP/7RsSz9FvouuKeAfz8DycpdzKd0ARKeqXv+F12eCp+1sNG5+M/Hz4Bmq5Ia+YSWqEFvZcaZyZIyPOoM2RaljY9xlcAhKlTAIBvGHf/d8WAYbm4+9mTlSoCKvqF4PNn6U+JQL+hanWxDxmVj7ueGYdQDvcCHQvfMGWGAb7y9C1X5VCHyKQsfWqJc6kTAIBeakIr5J3/umrwyDylioBRim9W5DVlFUGUVagxFDRkVD7ufnYccgvUuBfdyDckoUpLFAjYlhI9w5mixseeaQJKdPUYQ/nt/1gNHpmHu+efrMTywElnl1JHyDqTzi6jjoDBI/Jw19Pc+HeXCEsYFWqs7BBQo23IlKwrAGpuuWogACXW6fiG8OS/7hg8Ig+/eIa2JyC/0IeTv1JCdv1sdfal5aTXHzIqH79coEYB6gXGEGVehi6gDpBJWVcACMtUosLTy0w++CcNqIcDvnl1fx7/JzBsTAFGT6QZeuFu//TzDU2qshpgYDYtB8y6J5cUQokCwODJf2lDNRxQWBrAN6/O2oPEyF3/o+EQWmZbDe72d4YI2jD6KDIMoFlKtBGZoOaCWofUVFf6kdAfBvXxvwIIndEJEVB3QxO3KSoN4KSpJfjHazuRjGdmU55b7h2FwSPzM3Kt7hAQCOk9UGBUoMBfgR5GXxT6+6HYNwglgeEo8g9EgVGBfKMXcoxShPUi+LQwbJiwpBoP5YMp7hlAa1MS61a0Z+R6Q0bl45fz1Zl86jm2gLlZhZPZhaxdsnIBdYpMyK51K53GVADka4j0MhNaPu8cl277hgN+cOUnjm8X+42Z/ZQ88U0XPvTw9UUPX3/k6CXIMUoQ1ougi2NrtFIyhojZhIjViEhqF5pTdegwd0BCjeJ11o+GY/Vnrdi4qsPR63C3v/OMgXuHAehvrTNeu+m8wPkP/cXz3bRZVQAIW5xKf28BxgCe/OeUfUXAHVd9gvYWZ4qASWeX4ts/Hu7I3+4qAYECX18U+Qeh2DcQBb4+0ET6OvZ8IoQevj7o4esD7F15l5JxtCTr0JLajMbkBkTNprRdr6v8AQ0/e+IkzK38CA1bY45cY+jofPziGW78nSZCNozyFMx68s85FPEVjAPwPnUQp2XVEEDlKaN/BID82MfglAi0XO4BcEpRWQATzyrDh283ItKR3l3Gpp7XEz/49RjyiX8hvQB9QydjZP7FGBCejCL/AIT0HhDC+Vy6MJBjlKDEPxT9QhPRMzgShvAjajWTDBmEcgycdkEvLHu/GS2N6S2uTzilCD978iTk5pM3SllBRnSY2xT4rCXW1n7wORcAXlFTWamjQP81/vUeQ0MEbQRPjagy49WzCor8OOOb5di8pgMNW7r/Zmj4NFx3xzDM+s/hMAyaL08TOnoHT8RxeRdgeO7XUOwfDJ8WIsmyP7+Wg2L/YPQLTUK+rwIpGUXMaslohlCOgTO/WY7G+jg2r+ns9t8TmkDlrAGY86tRCIay5jFJzyeRWqXAJk9CRGuXrHyeOobTsqYZqvn+jLHQsJQ6h294AqFznB2vZP9LSuCdlxrw5D3r0dhwbFuOjj+jBLN+NBx9B9PsEqoJHRXBsRgUPg1BvYAkQ1d1mDuwOfoP7Ih/gUwP6n78zm48dtdabN0QOab///En9cB3fjIcw09wx2ftKRLofKIIdpR8gdruyvsXlAkVZiQ4KGsKgIVzrrhRQP4PdY7QOR3wDff83BLlmCkbf//zDry5qB4rPmyBfYQjZfN6+DD13J644Io+GDKKZqa/LnzoF5qI/uFT4NfcuUV5h7kTm6PvYUd8VUavK22JJW814o2a7fjkvaYjHtccCuuY9NUynHt5b5xwirrHTmeD2Bt5SK2lP/DJhjV82v0L11HncFLWTALUgCnkpZwAjH7qLqvyMsOn4ayLK3DWxRWIdJj44pNWbFnfiR3bYkhELRg+DeE8A70HhDF0dD4Gj8gjPdmtNDAcx+Wei5Du7nMG8oyeGJNfiT7B8VjT8So6rcaMXFdoApPPKcPkc8oQj1pYs7QNm9Z0YMfWGOIxC0Lb0+j3HpCDQSPyMPyEfBg+8rdOBsDon1SiABAwpgLgAsALJOQU6gx6qQkR4sl/1HLyDIw/owTjz1BvC9+glo8huWejIjiGOkpaFfkH4JSi72Br7BNsiL4Ny87cSphgWMfYKUUYO4Xf7N3A6J/as0Ud8aNSgz0FwBO0KZyVFQXAC7dd0ccyJfmWbUZ/fvtnh9YvPAFDc756zGv2VSeEjv7hiSgLHIfPO15AS3IrdSSmIBG0oZeasHbSNk9SCPKXRqdlRZ+XnZJTqTMAgK7IiVdMLYYIYEz+ZTgu93zPNv77C+kFOLnH1RicczpE9kxDYl2gxOmAEsNqbqr09FGfWVEAAJhAHQAaoPdS4KZmSsk3KjCp6DvoFRxFHSWjBAQG55yOcYUzEdDIN+dkitFUKAAAgYBO33Y4KCsKAAmcQJ1BLzIh/OTTEJlCegfHYkLhtQi7fKJfdxT5BmJS0beRZ/SijsIUYlSYSqxRk1IjbzuclBUFAARGU0fQKtK7Ix1zt/7hSRiZf1Fat+11q4CWhwk9rkGxn3yTTqYIEbSh5StxXDp52+EkzxcAz902rQIA+TiOwd3/DAAgMDT3qxieey6UeMVRhK75cWLBDPQKjqSOwhShwpwpIeGt5TgH8HwBoFmaEhWcEpNaGCkBgVH5F2Ng2POTi4+JJnSMzr8MfUInUUdhCjDU6DUd9mT1txTYm9gZni8AhC3JKzgtx4bI4/X/2W547rmeW9+fbgICI/K+joqgp4de2VHQy5V4aTJyWpPHUYdwiucLACkE+fRqTY0bmREanHMm+oUnUsdwCYGRed9AiX8IdRBGSOthKbFxmtC8Owzg+QJAQJK/SuhlSnRlMSJ9QydjcM5p1DFcRQgdJxRcjh6+PtRRGBUB6CU8EdBJni4A3qk+3QAEefeNIjcxI1AaGIbj8i6gjuFKuvBhbMF0BHWaw5gYPa2U/uVJgnsAXGlnZ9/jAJCfKqEXcwGQjYJ6AUblf5N3u+sGv5aDMflVELxcMitpRUo8O7kHwI2EZY4gzxCUELlK3MQsgwQ0jMm/FD4Rpo7iej18fTA453TqGIyAUULfAwCgvGZ2pSdPkvJ2AaBhEHUGXY0bmGXY0Nyz0cNHfv6UZwwKT0VpYDh1DJZhWpEaOwJC8w2kjuAETxcAUmoDqDNoxVwAZJti3yAMCJ9CHcNjBEbmXcQ9KtlGB7RCFXpQBRcAbiMgyb80Hv/PLprQcVz++VDjtcVb/FoYQ3PPpo7BMkxToBdVSjmAOoMTPF0AABhAHUCFWawscwaGpyBHL6GO4Vm9Qyfy0sAso8RLlOAeAFeprq7WAJAPwqrRfcUyIagXYEB4KnUMTxMQOD7v6xDefXSxA2hF9C9RwqbvTXaCZ39FI9o2lQMg3cNZhCSEj48AzhbH5Z4PXfipY3hentETfUMnU8dgGaLl0+8GCCEGUEdwgmcLACmtAdQZFDnOkmVAntELZYFh1DGyxsCc06AJgzoGywC9QIXnqBwgPTixx7MFADSbvMtGicqVZcSgnK/Ag88HZQW0XPQOjqWOwTLBJyGC5D2podpbK3tSh0g37xYACizb4B6A7JCjl6AsQL7jdNYZEJ7CcwGyhBLP0pRB3qakm5d/PeQTAEWeAjctc9zAnFN5u18CIb0Q5UHywz5ZBmgKPEuFEP2pM6SbZwsAAVlGnUGJqpU5yq/loDzAjRCVfrzhUlZQYTjVFiBvU9LNswUAoJEvxlbhpmXOKg+O5oNqCOUb5cgzPDc0yw4gFHiWCiGKqTOkm4cLAEl7eINQ46ZlzioPnkAdIev1Cnr2tFa2lwq9qUJKLgBchLQHQPglhE4+c5U5KFcvRb5RTh0j61UEx/AcDI8TYfqXKVvAcwWAJxfSVldXa2hfV0iZQQTpb1iVpJI2ErGuV/GGT0MwrGYXe3mI3/5VENDyUOQfhKbkRuookBKItKe69TfCuQY0nQua/Wkh+uepIH6pdIInC4AxjZsKzQBIWw2hwA1Lpb0lhcV/3YnlS5qxaXUn6uuiMFPH/nloukDP3kH0H5qLMZOKcMpXS1Hen/5UuDI+nlYZJf6hGS8ALFNi6eImfPpeE1YvbcW2TVF0tnWv8d8nnGugz8Awhp1QgJOmFmP8GSXw+b3cYXsE9PsAAJJ7AFwhGUgUa7TtvwobV2TcxlUdWPjwZrz/150wzfT9+9uWRMPWGBq2xvDB24147K61GDWhEFXfGYjxp9MU5QEtlw/9UUiRP3NLtDvbUnj56S/xyjNfoqUx4cg1op0m1q1sx7qV7fjzs18it8CHcy/vjUuv64/C0oAj11SZ8EnAkIBJ2jPiuR+8JwsAHaKEuvnNph6AznYTj9+1Fn+t2Q6ZgQ9eSmDlhy1Y+WELTppajJt+fnzGewSKfAPBO/+pI88og1/LRdLudPQ6by6qx2N3rUV7S3re9I9WZ1sKix6tw6vzt+Gq2YNx8dX9ILTsuv9EQEJyAZBWnuxTsiX9cg0Roi5BMmP9ynbceMESvL4wM43/gT77ZxNuvPAD/OMvOzN63UL/gIxejx2JQJGD30k8auGu767Afbd+nvHGf3+xiIlHf74WP5z5GWkOCgrMAwjVzK4MUYdIJ08WAIBGuwQQe6pVr1u2uBm3TfsYO7fFSHNEO03c9d0VeOkPWzN2zSL/oIxdix2dPb0y6dfZlsIPrvwE7726w5G/fyyWLm7C3MqP0NgQp46SOfQFACzhrXE/bxYAArnkERS4WZ20+rNWVM9ailiUfn0uAEhb4nc/XYO/1mx3/FqGCCCsky4yYQeR58CSzETMwk+uXYo1S9vS/re768uNEfzwqk+zpidAIz3cfQ/dMuhnH6eRRwsASX4ou5cnAbY2JfGz/1iOuCKN/z5SAg/96At88Wmro9fJMchHmNhBOPG9/M+PVzt+P3XHlxsjuOu7y2Fb3n3e7KPC0mrNZ3lqBqYnCwABSf4leXkToAfv+ALNu5yZ/dxdpilx79zPkUw497Dg2f9qMkQAAS19nX+LX9+JN1+oT9vfc8qy95vxyrNfUsdwngrPVIv+5TKdPFkAwAb9l+TNTxYfv7sbS97cRR3jsOq3RPHCY3WO/f0QFwDKyjHS890kEzZ+919r0/K3MuHp+zagrTlJHcNZGn0BYEmd/OUynbzZTAmNvADwag/A/F/T77Z2NF54fAtiEdORv52j8xCAqsJp+m7eqN3uqgl2kQ4Tf3xiC3UMRylx5pbGPQDqEyr0AHivAFi/sl3JyVAH09mWwjsvOTNrO6jnOfJ3WfcFtPR8N392YZf6X57bntYNuFSjQgEgJP3wcjp5swCwFajSFLhZ0+3dV9RZBnU03nm5wZG/qwtPPQM8RRfd/+lvWt2BurXObijkhLbmJJb+o4k6hnNU6FUVOn3bkkaeLACEBvontAf3WPzMZQ+X1Z+1ObJSwUhDI8OcYaShOFv6T3fd5/tb+r57sx+RAi9VAjZ925JGniwAIOl7AITHhgCSCRtb1rvrrchM2di0uiPtf5d7ANSVjgJg3Yr2NCShsXaZO4bojokKz1QVhpfTyJsFAOgnASpxs6ZRw5aoK9cab6+Lpv1vcg+AunSt+wVA/Zb03zOZUu/A/a4MBXoAbOmt6t+TBYAtJH0HvMc+2Y40HXOaaR0O7JImVJiNxA5KF93/6Xe0uvNeB9yd/UhU6FUVKrQtaeSxZmovCfoFsZa3Tuoyk/Q/vmPhxIZAtu3dh6zbmXb3f/qpJP2Oc8fKNKUre+qOiq3AM1WFtiWNvFkAQIEvyb3PkIMKht351hvKTX9uU4Hbix2cKbu/Q2Uw5M57HQACIR2arkBD6QDio4D3ZBBpuMEU4s0CQAj6J7THCoCiMneOexeXpX/IzrTds0FMtrHS8Hwu6uneYV4n7ndVSBWeqdwDoD7Npq/SpMeGAErLgwi5sBeg7+CctP9Ny1vPAE9JRw9AvyHkh4keMyfud2UocPaYBo28bUknTxYAEPRPaBW6q9JJaAIjxvWgjtEl+YU+9BuS/gdiOhoZ5gwrDXMARp7srvt8f6MmePiYagUKAO4BcAf6L0mF7qo0m3BmKXWELhl/eimElv5CLGq1pP1vsvSI2s3d/hvjTiuGYbizgJ9whocPqlKgV1XC9lT1780CQIUqTYVqNc1O/0YvGD733DJnX1ruyN+NmR7ebc3lomn4bgqK/Bh/hruKXQAYOjof/Ye5d/jiiBQoAJRoW9LIPU/zrtBUmATovY+2oMiPsy9xplFNt8Ej8jB2sjOn9kUsLgDUJBGx0/PdXHJd/7T8nUy69PoB1BEcpcK8Khs69wCoToJ+kFbSlyCOmHHTIARcsEzqmtuHQTj0vIiYjc78YdYtcasjLXMAAGD0hEKMd1F3+pBR+Tjt/J7UMZzlzOneXWMo8HKZRt4sAGxBXwAk6KtVJ5T1DmHm7MHUMQ7rzG+WY9xpzrz9A0DUboUtPTjG43IRa3da/94N1ccjlKP+xm8+v4bv3TXCs+v/97HjCjRXdpILAOVpNvmJGDLmzY8WAC65tr+yb0eDR+bh5rtGOHoNKS20m/WOXoN1XWvqy7T+vfJ+Idx81wjHepLS5bs/Ox7DRudTx3CcCs9ULWV7agYw/SfqAAGk91XgGMi44k+NbhCawA8fGoOhij10CksDuPPREzMyRNGc2uz4NVjXtCTT/52c/o1emDlnSNr/brpccm1/fK2qN3WMjFDgmSpLixu5AFCdbenks7SU6K5yUCjHwC+ePRmjxqux7rj/sFzcXzseZRXBjFyvJVGXkeuwo2NLE63mNkf+9vTvDsK1P3BuTsmxEAK48ubBuP5Hw6mjZIwCBUDrGdXvqjATIW082UppUiPvAYAC3VVOy8038Itnx+Gi/9eP9OE46axSPPDiBJT3D2fsmi3mVtjSU88CV2tJOft9VH57AO587ETkF/ocu8bRCoZ1/PA3J+DK7w9WqihxlARkgviZKul7ltPNk61U3CcV6AHIjl+mz6/hP6qPwz3Pjceg4/Myeu3iXgHcev8o3PnYiRmfrOXkGyfrOie6/w806axSPPrmFJxT2Ztkwp0QwJRze+LRNybj1PM8PuP/ADKu0W+uJkDerqSbZ1upmjkzogBCVNfXcm3kXt39XcncRErgw7814vXntuGTv++Gaab/WFIhgONP6oFzKnvjrIvL4fPT1bB9Q+NxfN4FZNdn/2tx8/8gYmbuBa1+SxQv/2Er3n15B1qbnJ0Ynptv4NTze+HrM/tmvMhWhd2qo/MZ8uHGP1fdv+Dr1CHSSf01LsdKogkCfagub3t0GeDhCLHnLWnSWaWIRUys/LAFm9d0on5rFNEOE51tXe+iDeXqCOcYKOsdxIDhuRg9sQiFJWqcTLgjvhLDc8+FJtTfF8HLWlNfZrTxB4CK/mF85yfH4dv/ORwbVnVgzdI2bNscQevuJKIRE2by2Ipf3RAI5egoLAmgvH8Iw08owPATCqC7dGvidJEx+n9/CXjujc67BYCQTYAgKwCQEpBxARFM/1uwG4RyDEw4s9R15wd0RUrG0Zhch56B46mjZLWG+HKyawtNYOjofOVWxHiN3anAaLWQntsBTIFP1SFSkI/X2O38Zuh1DfFl1BGymi0t7Ih/QR2DOUyFZ6kmNfI2Jd08WwAITZDP2LTbPfvxsr0akxuQsDupY2StXYk1SMkodQzmMNlBXwBIQT+5PN2820JJuYM6gq3ATcucJaWFrdEPqGNkrbrYYuoILANU6AGA1MjblHTzbAFgC9RRZ5DcA5AVtsY+QtKOUMfIOo3J9WhP8ZbM2cBuU+BZKqXntv9U4FN1Cv2XZbd7d44l+1+WTOLL2MfUMbJOXfSf1BFYJkhAdtA3VQFfoI46Q7rRf6oOEZaoo87AcwCyx9bohzC9ega0gppTdWhJbqGOwTLAjmqQFvkywN0X3fNEB3WIdPNuCxWgP63FbteA7FwFmHVSMoa6CL+RZoKExPrOt6hjsAyx2xQY/wf9kLITPFsAVP2ytg3UGzeYAnbUsx8xO0BdbDEilueWCitne+wztKV4G+ZsochcKvIXSico8ck6iLyP0G7ieQDZwpYWVne8Cu72cU5KRrEh8jfqGCyDLAWeoVKBOWVO8HYBIOmrNnu3Et1XLEOak3VoiK+ijuFZ6zre5BUXWUaFZ6gA/ZwyJ3i6AJAafdVm7aavXllmret8HUmbN6dJt+bUZmznnRezjrWb/ghmLy4BBDxeAAibvmqzm+irV5ZZCbsTK9pqIXkoIG2SdgQr214ED69kFxnXIKPkKwCgaTwJ0IXkBuoEVosBadPfwCyzmlObsZnXqaeFhMTK9heRsD23CosdgaVA9z8AqyMvUEcdwgkeLwB8K6kTwNpzljXLPhs730FLcit1DNfbFHkPTcmN1DEYAVuJIVSx7urqp+LUKZzg6QKgat7T2wHQHwrUyAVANpKwsbJ9EeJWG3UU19qdXI9NkXepYzAiagyhyhXUCZzi6QIAACDl59QReClg9orb7fis9VmkZIw6iuu0peqxvJ3nUmQzFSZRCwnyNsQpni8AhBDk1Zu5g/4mZnQ6rUZ81vosLN4q+KhFzWYsbZsPy+bPLGuZQokCwIZcTp3BKZ4vACAk+TwAa6cB2NQpGKW21PY9KwMk3whHkrA78Gnb07zeP8uZu9R4btqSvg1xiucLAGnT9wCoUskyWo3J9VjWvhCWTFFHUVbMasUnrX9AzGqljsKIWfUKrP8H2qc98Dz5jrJO8XwBENf1VVCgjlTkZmbEGhNr8WnrH5CSvFHQgTrNXfi45QlETPJ5u0wBVoMSL00rhYc3n/B8ATDz3mcikCBfQ2TVK3EzMwW0prbh4+YnEbfaqaMoozlVh49ankDc5s+EAZCAtUOJlyb6HmQHeb4AAAAI+i/RbPBTR2AK6bQa8XHr79Fu1lNHIbc9vhSftT4DU3pyqTU7BnazDhlXYgM1z47/A1lSAAgJ8g3EZVTAbldhTStTRcxqw4ctv8fm6GJ4uJfxkCyZwhcdr2BV+0uwpUUdhynEVOPtH7AledvhpKzol5a6fB8KbMdrNRjQ8vlBx/6XlBbWd76JttRWjMy/GD4RpI6UERFrN1a01aLD3EkdhSnI2q5EAZDItVo/ow7hpKzoAYjD+BCASZ3DVOOmZgralViLD5of8fyWt1La2BL9AB80P8KNPzskNeZMyY/Of+gvCeoUTsqKAmDmvc9EAPphALPOn409vewoxawWfNr6DJa2PefJ7YPbzXp81Po41na+zksh2SFZzQbsDgWGS6W2mDqC01QoszJDYjEETiaNENFgN+vQinkYQAXtLSmsX9mO7XURtLekkIzbyMkzUFjqR78huRgyKg+GL/M1cmNiLVqSmzEo53T0D02EEAo8DLshaUewofNtbIsvRaYr4M52E+tWtKF+cxRtLUkkYjbCuQYKS/zoMzgHQ0fnwx/Iivcg1zC3qNFTKgS4APAKIbBYAjdT50jV+REo5n3hqXS0pvDmonq883IDNnzeDnmY9sgf1HDS1GKcfUkFJp9TBk3P3DwSUyaxrvMNfBn7EP1Ck9EndBJ0ocaD8Wgl7Si+jH2ELdEPMjrDP9pp7vmOX2rA2hXtkPahv2SfX8PYKUU465sVmHp+TxgG/VyhbKdIASClTL5PHcJpWXO3P3fbtArd1LZT59B7p5Bzife6d1UXi1p4/n824eU/bEUs2vUemPJ+Ify/W4biKxf2giD41fi1HPQNjUf/8CkwRCDzAbogaXdiS3QJtsY+ymhXfzJuo+aRzfjj77cg0tH1KT9lFUFcNXsIzr60guQ7ZoBMCXQ8VgzQd5J+UXX/gpHUIZyWVbd5zZz0iBZOAAAgAElEQVQZmwEMoMwgNInc65sh/DwZIFNWftSCe76/Eo0N3X8LHXdqMW65fzQKS2j2dfCJMMpDo1EeOAEFvgqSDAcjpYXdyQ2oTyxHY2Jtxpf1rV3ehru/twINW7vfuzZ6QiFue2A0SsuzY0WGSszNAUT/nEcdAwLyscr7n5tFncNp7h5c7KLLThk9XgBjSENIAb2XCb2QvsTNBq/O/xJ33bQCkfb0LAJp2BrDuy834MQpxSgszfybuI0U2lLbsT3+KXbEV8FEHEGtAD4t842VhER7qh51scVY1fEnbI8vRcRszPjxvW//sR4/nbUc7S3p6W3YtT2Ot1+sx+iJRSjpxUVAJiWXh2Dtoh+ZllJ7aNEHKz17CuA+WVUAVJ0yuieAC6hziICEbyAfc+q0hQ9vxiM/W3vYcf5jEYtYePflHRh3ajGKyui641MyiubkZmyNfYD6+HJ0mA1I2lH4tVwYmjO5YlYLdia+wNbYh1jT8Rq2xJagLbWdbFb/X57fhnm3r4JtpfdLTsRtvPvKDhx3Yg/06htK699mhxZ/LwcyQT8pU0C7tfaDFc3UOZyWXUMAc68YASlXUefQcmzkXt2cZZ9+Zi387WY8+av1jl6jsMSPB1+ahLIK1d4SBXL0IuQaZQjrRQgbJcjRSxDWC+HTciCOcOPZ0kTSjiBi7UbEakLU2o2I2YROcycSdmeG/h2O7MO/NeKns5alvfHfXyCk46ePn4ixk4scuwbbw2o2EJnfgzoGALm96v7n+lCnyISsa4Jq5syoA9CfOkf40jYYFbwW2gmZaPz3GXlyD9zz3HjoLpo9rgvf3v8E4BNBSNgwZRKmHYMpk5D0h2ceUWNDHDecvwQdrc7/hrgIyIz4B2EkPw5TxwCA31fdv+A66hCZQN/XkmkSf6WOAADmej4cyAmLHqvLWOMPAKs+acWrC77M2PXSwZIpJO0oYlYL2s0GdJg7EbNakJJxVzT+APDbO9dkpPEHgETMwk+u/QxLFzdl5HrZytygxuoWCfkX6gyZknUFgNTU+HJT64NwybPWNRb+djMev2tdxq/7zLyNx7S0kB2bzz9uwZI3d2X0msm4jerrl2HZ+54fFiZhNxqwW5SYkmb67cDb1CEyJesKgKAeehsA+Qw8GRMw65XY8MITMtntf6CO1hRef34bybWz0aJH6kium4hZuPO6pVwEOCC1Xo23fwDvX/zAU63UITIl6wqAi+55ogNSKrHDk0I3vatlutv/YN56oZ70+tmitSmJj9/dTXZ9Hg5wRmqDGkOiAuJ16gyZlHUFAAAITVNiGMDc4OdhgG6i6vY/0MYvOrBzG2/x7LQP3mqE5eCs/6PBwwHpZe0yYLcp0f0PaasxRJwp2VkACFuJKk/GNZjb1Kh83Yiy2/9gVn7UQh3B8z5X5DPm4YD0Mdep0hMqdlQ+sMDzm//sLysLgMvufW4FACWmbqfWqHLzu4sK3f4H2rJOnTXyXlWn0GfMwwFpYKs0FCpfF1l2YHtWFgAAIKHGcsDURj9kwj1ryFWgSrf/gXZtz9yJd9lq13a1hll4OKB7Ulv8sDtVaYaya/wfyOICAMAfqQMAAEyB1FpVKmD1vfSHrcq9+e8T7UzPeQPs0OIKLrdMxCxUX78Ua5bxKZ9dZa5SZhfNeDKFrBr/B7K4AGjtzH0TAkr03SU/V+ZHoLSP/taI3/3XWuoYh6Tr3JPjNE3RzzgetXDntUuxewf3Ah0tGRVI1SkyB0ritSsfmt9OHSPTsrYA+Pajj6Yg8SfqHABgNxmwdtKfgKWylsYE7r3lc0hb3SG63ALe18FpOfnq/k7ampO4Z/bnaT98yquSq4LqjLgLUUMdgULWFgAAIKQ6X3pSna4wJT3xy/VpO+7VKeX9+dQ4p1X0U2Kv+ENa8UEz3v4j7wlxRBJIrVbm9xJFPPkqdQgKWV0AlBRs/xuAzO4pegjmugBkUs3uTWrbNkXw1h8bqGMc0dBR+dQRPG+ICz7jZ+ZthGWq8mqrJnObD3abGs2PEOLPVb+tVWd5SQap8Q0QOaP6XVOVYQCZEgqth1XLH5/YqnTXPwAYPg0jxxdSx/C8E05R/0S+ndtieD/DZxW4TWqVMm//kEAtdQYqWV0AAIBQaOwnsSykzpiYIsyUjfde3UEd44hOOrUYOXnqjk97xUmnFiNX4XkA+7zzJ/V7rKjIiAZzozLzZSJxocbOsBSyvgBYlT/0HQBK/FrtFh3mFkVmxSpi9dK2jB372h0XXNGHOkJW8Ac0fPWy3tQxjujTfzTBTPE+3weTWBqCtNUY7hQQL8+895kIdQ4qWV8AVFdX21IINfYEAJBcqk7XmApWf6b+wVyDR+Rhwhml1DGyxiXX9Yc/qPajKxGzsGl1B3UM5cikQEqlCc9SLqSOQEn9vrRMsLAAGm6gjgHsnRzTaEAr5U1lAODLjWoX50IA37nzOAg1XmiOqGlHAnXrO9FYH0e0w4TuEwjnGKgYEMaA4bmuGMYoLQ+i6tsD8eyDG6mjHNa2TVEMG1NAHUMpyVVBlSY7t3QW+JXYEZaK+r/2DLj8gfmLa+bM+ALACOoswJ4ustA5/PYAAM27EtQRDuvia/pj9AS1J/9tWdeJNxbVY8kbu1C/JXrI/52mCwwdlY+vXNgLZ15cjh7F6g5HTfvuIHzy3m6sWaru7nuq37uZJm2B1DJ1ejgF8MzV1U9l9c5NavejZZT8PXWCfcz1ftgdahyPSS2ZUHcc9YRTinDN7UOpYxzSlnWduPPapfjOue/jhcfqDtv4A4BtSaxd3oZH/3stZk59Dw//dI2y8y8MQ+COX49BUZm6K2fiMfW2LaZkrlNp339A2niSOgM1db4NYkbC9wcASpTs0hZILVdonIyQ36/mLTpkVD5+8shYGD718tmWxDPzNuLGC5bgw781HtPOdMm4jZee2orrzlqM9/+q5pK2nn1C+PlTJyGvhzIzyv+NP6DevUEpqdDbP6T4sOqBBcuoY1DjO3SvS37zdBOgxp4AwN6xMj4lEAUKdkMPGZWPu58dp+R4ebTz/7d351FSVXcewL/3vdp6BWxEBUVQRBHE3RGNGZdEx4xoFLoQBGI0QmLGUZbJaBKTNqsaoEEzRokaF7obuxCduCTuCyoaRVEWRYPsICBrd9f26r3f/NHggNLSDVV176v6fs7p4/EcTr8v1K33fu+uGfz0e/NQd8dSZLKwGc22zWn8+kfz8ZfbPzFyi9sj+lXg1hmnGFkEmDyEkm+ZFUG4G835vijLu1d3BhOwANiFCIxpFJJWSL9n9ran+dCjt1n/Bjsf/ibu+x9vzuDGEe9g/uvZPZpWBHjkT8vwx5s/NLIIOLK/mUVAj95luiMYI/WWUf8WzSG7pKhn/+/EAmAX0dr6FwD8U3eOndLzI5BEcX9Ex5zQWXeELxx5bAV+95CZD383I/jV2Pn4eEHuDjR7qm4V6u80c+b9kf0rcGvdKajsYsZnEwha6NO/QncMIzjLQmYddiaov+T2+znLGiwAdqMAEWXOxBBxFFLvGjRupkH/UzojUqp/QmSfAZW4rd6cB8yXzZi2FPPfyO6b/56v8ynee92IU7S/4shjK/D7h83oCTjutC4Il+hvt9oJkHrLrF48z1LG9PTqxgLgS5Tl3A/AmKnP6Q8i8FqK92OKlNoY9O1uWjOY3O0PAMuXNCN297K8XEs8Qe1/L0YybuYMd1OGA84efLDW65vCWRqCZ9DYPwQfXD657m3dMUxRvE+WNkT/EPsMkCd15/hCRiE9r7h7AS69qqe2a5vc7b/Tn3+7JCsT/tprw5oEnnh4Vd6u11G6hwM6V4VwziWHaLm2UQRIG/b2ryD36M5gEhYAe6DErtWdYVfOwgikiHsB+g7shFPP6Zr365re7Q8ASxc1Yd6c/HfJz753udF73escDoj+sLfxWxXng/NJGO5mg97+gc2SyjykO4RJ2Er3oLp2xhyIekt3jp3EVUi9bVYlnW8/vPmYvN5UTe/23+mZxjVarrvl8zT+8dLnWq7dXjqGA3r1LcfFV+rrsTKGB6T+YdY9Swnujt4Va9adwyQsANqglEzWnWFX6UUReJuMqqbzqkfvUvzwF8fk5Vp+efgDwOvPrtd37b+buUHQrvJZBIQiFm68cyACAe7fkV4YgbfFqEmQKUusP+oOYRoWAG2QVc5sAOasefKA5KtGraXNu+8MPxSXXX14Tq/hhzH/ndauiGPTZ/o2r1zwVu5XHWRDPuYEKEvhJ1OOQ6++5Tm7hl9IShn39g9gxpCpM4w49t0kLADaEI3FXAHu0J1jV5nVQTjLint3sWt+2hcXjTosJ7+7/ymdjR/z39XyJXp7MzesTaKlyR+nVh55bAVuqz8lJ2cHBIIW/mvyAHzjwoOy/rv9KPVmmWn7l4glYtS8LlMY9SmZprS5/F4oGLXoOTWnHDBzBVZeKEvhP37VD2N+fnRW9+E/v7oHfj/jFF+8+e+0YY3+g8w2rEnojtBuvY+pwNTZp+Ho47N3RG+XA8P47YMn4dzvctY/ALibbTgLDTugSdTTQ2sbFumOYSIWAF9j8PTpcRGZrjvHrrxtFlIfFPeyQAC47OrDMXX2aTjmhP27mR94SAQ/v+t4jL+9v+8Ob0m06H/7jjf7qxrt1qMEk2OnYvT4Pvu1UY9SwHmXdsef/jYIxw86IIsJ/S01pwzimTUHQgybz2WS4p1V1k6ui2kBG+MAGHM8X+qtUoSOTkKVGrgxex71GVCJ2kdPw9znNuLRe5dj8byt7d6rvkfvUlxyZU9cUN3Dtzu2ZRz9n7+TNncpYFsCQQsjrjsCF1T3wGP3r8Czs9Zg+5b27f0VDFk44/xuqB7bC30GVOY4qb9kloWRWWnaEKW8P2xKw0u6U5iKBcBejJjWsD42fni9QF2lO8sXHIXUm2WInMsVLcpSOOOCbjjjgm5YvzqBt1/6HIvmbcWqpS3YtD4FJ+3BsoDOXcM4tHcpjj6hE04+q4o3b0LVwWH84Kd9ceVPjsL7b2zG/Dc2YemiJny2KoHtW1sLgkiJjYMOjaD3MRUYcFoXnHp2VyNPgdTOA5KvGTfxD6Jwm+4MJmNLboeMJ7+2LTUSgDHlbXpxBMF+KdiHGLNrsXYHHVqCi0YdlrNJglSYAgGFk79ZhZO/WaU7im+l3imFt9W4nrTFamWmUXcIk/lr0FOT4VNnLleQB3Xn2I0AiRfKIa5Z421EVFy8LTbS75g3L0kBNdFYzF+TVPKMBUA7iRv8DQB9i673wNQvHhEVCXNfRBYsquz7qO4QpmMB0E7RaQ+tVIBxx0im3imFt8m4rjciKgLOggjcdSYunbV+XlNT478ZqnnGAqADLM/6LYC47hy78YDECxUAmzoR5ZHXYiH5pnkT/wDMq54y4wndIfyABUAHDJk6Y50SGHecpLs+gPRCY1YpElERSL1cDkkZ+AgR+bkC9K+R9QEDPz2z2bZ9K4AW3Tm+LPlGGaSJHycR5V7mn2E4nxqzKGoX6o1obcPfdafwCz4xOuiySQ9vUIB5p0o5CvFnORRARLnlxS0kXzH0YDLLu1l3BD9hAbAPRJzbAWzRnePL3LVBpN7jqgAiyhEBks9WwIsb+OhQeD46qeFF3TH8xMBP0XzR2thmAWp059iT1NwyuOu5vxMRZV/6vRJkVpk46x+upWSC7hB+wwJgH3WrXHsXIAt15/gKARLPVAKOcetyicjH3M0BpMyc9Q9R6p6hkxo+0J3Db1gA7KNzal7OiKhxunPsibfNQnKOoWN0ROQ74iok/m7khj8AsMWF90vdIfyIBcB+GFZb/zxEPaU7x56kF0XgfGLiLF0i8pvUnDJ4mwwdWlS4ZcTkhs91x/AjFgD7y1MTABh5Ik/ylXJ4zfyIC1UgqP9tLBhi+yp0zqchk/cZ+WhLU/ldukP4Fb+9+yk6bcYSJQYuCwQgCQvxJyuBjP4HBWVfSZn+N7LScm5DXci8bTaSz1UYu62OUmr82OnTjXwB8wMWAFmQyqgaQH2mO8eeeBsDSL7K+QCFqFt3/W9l3Xpw2WmhEkch8WQFJG3sC8TT1ZPr/qY7hJ+xAMiCkXfWbVfwanTnaEt6UQTpxfofFpRdhx9drvX6Bx4SQVmF/l4Iyo3Ei+VwNxv7+Tpc9rf/WABkyaLKo/8M4HXdOdqSerkM7gZjv8y0D3r0KkXVwWFt1x94+gHark25lZpfgszH+trW3qnbh05u+Eh3Cr9jAZAlNTU1nqXkBwBSurPsibgKiacrIAlju/NoH5x5/kH6rv1v3bRdm3LHXRdA6nWjhw0/bqkM/kZ3iELAAiCLhk5u+AhK3aY7R1u8Jrt1kyCeF1Awzq/uruW6XbqGcNo5XbVcm3LHa7EQf7qTyfcIgciY79c8kNQdpBCwAMi2ivRvASzWHaMtmVVBJF7RO3ZM2dNnQCVOPqsq79e97Ae9EAjy9lFQMgqJpyohcXN7CQVqerS24RXdOQoFv8FZFq2JpT2oq2FwDe0sjCA9n7O3C8U1PzsagUD+btrdukcweNRhebse5YEAiWcqTD9HZF0mJDfpDlFIuIg3B2bNXbB66BkDD1LAqbqztCWzKgS7KgPrAFd3FNpPnbuGkE57WPj21pxfy7YVbr77BBx6hNFjxNRByTllcD4yfKWQqO8Nn1T/nu4YhYQ9ADnipHETgFW6c7RJgPizFXDXGV3xUzuNuqEPjh+U+1n5Y39xdF6uQ/mTml+C9PvG9wg+Ga2te0x3iELDAiBHRt5Zt12AH+rO8bUyCvEnK+FtY0eQ39kBhV/ccwL6DKjM2TUGjz4MF4/umbPfT/mXWR4yfcY/AGyHBMy+l/oU7/w5NGvugk+qTz/uSCgcrztLmzIK7qoQgkenoNgZ4GuhsIWzLz4YSz7Yhs9WJbL2e5WlcPV/98WVE4/K2u8k/dz1gdatws084e8LImrssNoZc3TnKEQsAHLsklMHvmDbuBxAF91Z2iIJC+7aIEJHpdkifC4YsnDuJYdABPjw3a3w9nMqamWXIH72x4E4v7pHdgKSEbwtNuKPdwJSxncCPzKstv5m3SEKlfGfvt+NvLNuu6fUMBh6YuBO7rog4k9VmnreN3WAZSuMHt8Hf3xqEE4790CoffhIQxELl3yvJ+578Rs47dwDsx+StPGabLT8bydIwvDbv2A1xLlWd4xCxrt9njwyfkSNAn6pO8feBHqnUPKdZijL0OO/qMOWf9yMZ2NrMPe5jVi3It7mn7NshT79K/HNiw7CeZd2R5euoTympHyQZhsts30x78cT4FvDptS/pDtIIWMBkCcv1Zwd2NjU/VUIBunOsjfBPmmUXLCd/UMFaOO6JFZ+0oINaxNo3paBHVCo6BTEwT1L0PuYCpRXciJIoZKEQsvszvA2G//whxL8rrq2/me6cxQ6FgB51DhxVG947nwAuZuqnSWhfklEzmtmCyEqAJJWiD/WyS8Hgs1DpXNGtCaW1h2k0JlfChaQ2BsfbB16+sB1SuG7urPsjft5AJK0EOjF7yCRn4mjEP9rJdz1Qd1R2qMFrnVB9LaZG3QHKQYsAPJs1psL3q8edFw/AAN0Z9kbd30AklII9HTYE0DkQ5JWSDxRCXedLx7+gODa6NS653THKBYc5dUh6IyF4BPdMdoj/X4JEi+WA5wTSOQrkrQQf6wTMmt98vAH6qO19ffpDlFMWABoEL0tts2y5GIATbqztIezOIL4sxUQj90ARH7gxS20zPbNmD8ALEha9hjdIYoNCwBNhk5u+EgJfNPgMx+HkXiqgvsEEBnOa7IRn9UJ3ibfjPBuhViXjZ70cIvuIMXGNy2kEMXeXLBw6KABnRXU6bqztIe31Ya3LohAnzQUWw6RcbztNuKP+2Kd/04CUVdEa+ve0B2kGLEHQLOtzRU/AfCq7hztlVkdROKvlZA0ewKITOJtCqAl1tlPD39AqV/zlD99WABoNnb6dCfjShSQNbqztFdmbRAtszpDmth8iEzgrgqh5dFKSNxXhflzWJn+le4QxcxXraWQzRx/xekW5BUAvtl/VZV5KL1oO+xuGd1RiIqW82EEyRfL/DZJd0UgFTj5sv95aJPuIMXMR31FhW3W3AWrhw4auEUB39Gdpd0chczHYdhdM7A67+exc0TUMQIk3ypF6rUyQHz18I/Dw/lD75yxTHeQYscCwCCz5i54e+iggVUK+BfdWdrNU3D+GYGKeLAPYk8AUV54QOL5CjgflOhO0lGeUhgereUhPybgIK5hPqw86gYA/6s7R4d4QPKVciRfLeOGQUQ5JimFlsc7wVkS1h2lwxTUhOrJ9bN156BWvuo3KhYPTRxVFvHcVwCcrDtLRwV7pxH5djNUmEMCRNnmbg4g8WSFv2b67yBQdw6bUvefunPQ/2MPgIFGT3q4xfaswQBW6M7SUc6yEFoe6QRvk292ICPyBefjMOKNnXz58AfwtFqVHqc7BO2OPQAGa5xwxbEQeR1AZ91ZOkrZgsg5LQj2S+qOQuRvHpB6swypeb4b79/pXSSdf43eFWvWHYR2xwLAcLGJI88Wz3sGPloeuKtQ/yTCZ7dAWZwcQNRRklCIP1MBd5Uvv/4AZI0dsE4fcnvdat1J6KtYAPhAbNzw74tS9+vOsa/sQxyUXtgEVcZ5AUTt5W4IIPF0BbwmX3b5A8B2y5Kzhk5q+EB3ENoz37asYhJ7c+H86kEDMoA6V3eWfSHNNpyd+wV0YhFA9LUESM0vQeKZSkjKt9O0EhC5qHpKwz90B6G2sQDwidjchXOGDhoQVlBn6c6yTxwFZ0kEklQIHOpw+inRHnhxC4m/V8BZUOLnJbUOLG9IdMrM53QHoa/HAsBHZs1d+MLQMwZUKKgzdGfZV+76IJxPwwh0d6BK/XuHI8q2zNIw4k9Uwvvc1ytoXECNjE5u4AE/PsACwGdicxc+9+GgAd0B5bs9AnaShAVncQQqhNbdAzkThYpZRiH5WhmSr5UBGV9/GQSCMdHa+od1B6H2YUeszyhAZFXmRwAe0Z1lf4irkHy1DPEnKyEJNkMqTu6GAJobOiP9vm+X+O0kAH4cra2/T3cQaj9fl5vF7J4xY4JdKpofhWCw7iz7S4UF4TNbEOrPPQOoOIirkH6nBKl3SoECmBcrwI3DptTfpjsHdQwLAB9rrKkOYVvwcShcqDtLNgQOdxA5uwlWZQHcEYna4K4NIvFiObwthTECK8Atw6bU1+jOQR3HAsDnHpo4qiziun+Fgi+XCH6ZCgrCg+IIHZfgABUVFElZSL5WCufDiJ9n+O9GCX5XXVv/M905aN+wACgAT193Ybg52GUmgO/qzpIt1oEZlJzbDLsbjxgm/3OWhZB8qRzSUjhVrQJqqqfU36I7B+07FgAF4p4xY4JdypvrAFTrzpItyhKETkwidGocKlggr0xUVLxtNpKvlSHzqV+38t0jUUqur57ccKfuILR/WAAUkMbqalsdFpguUFfpzpJNqsxD+F/iCPVLcliAfEEchfS7JUjPK4G4BXWbdSEYy9n+haGgWiYBAqjYuBG1ULhed5Zss7tlEDmrBXZ3R3cUoj0TwFkSRvL1cki84G6vGShcFZ3Mdf6FouBaKLVqnHDFLRD5he4cuRDolUbkX5u5WoCM4q4PIDmnHO46X+/k15YURA2P1tZxh78CUhjrUOgrYnMXvDx00HGeAs7RnSXbvK020osjQEbB7paBYismjbxtNpIvlyP5WjmkqSDHqFoU1OBobd3TuoNQdrEHoMA9Mv6KqxTkbgBB3VlyIigID0widEocKsSJgpQ/XpON9NslrcVowTY99ZmncPHlk+ve1p2Eso8FQBFonDD82xAVA9BJd5ZcUSUeQsclET4pAXDFAOWQtFhIzStBemEJ4OpOk1OLXc/79+FTZy7XHYRygwVAkWgcd8VxUPIkgJ66s+SSKhGETowjfHwSCLAQoOyRhEL6vVKk3o/4/dCevRO8GJTQkEunPrBVdxTKnQJvxbSrxnGje0A5TwHqeN1Zck2VeQifmECwf5JDA7RfvO020vMjrV39TuHfMgV4SFU610RrYmndWSi3Cr81024ar60uRyTYAOAi3VnyIigIHZtE6MQkrIrC7q+l7PI2BpB6rwTOx+ECHuPfjQjwq+iU+ltUsfyNixwLgCLUWF1tS8/QHUrkWt1Z8kVZAvuINMInJWAfxO2FqQ0CZFYHkZ5fgszygtq9b28yUPhxdHL9dN1BKH9YABSx2LgrJoiSWwEU5MLlttiHpRE+IYFAT4c7CxKA1p37MkvCSM0vKZhT+jpgo7KsaPWkGS/rDkL5xQKgyD0yYcQ3lahHADlYd5Z8s8o8BI9JITggCauSwwPFyN0QgLMwgvTH4aIY39+Dd13PG8KZ/sWpKFs87a51cmBmFoDTdWfRQgGBQx2EBiRhH5GGsjj8WcgkreB8EkZ6QQTexqLq/Nqd4GHAGRutjSV0RyE9WAAQgB1HCge63AGFMbqz6KRKBaF+SQT7JWF1Ya9AwRDAXRtEelEEztJQ4S/j+3pJCP6DB/pQUX8L6KsaJ4wYBcHdAEp1Z9HNOsBFsE8Kwb4pFgM+5W2y4SyJwPkoDK+FEz4gWG3Z3tChk2a+pTsK6ccCgL5i1vjLT/RgPQqgt+4spviiGDgmBasTiwGTeZtsOP8Mw1kSgbeND/1dvJJxZdiIaQ3rdQchM7AAoD2qnzC8a0DUgwC+ozuLUVTrscSBI1MI9HRgd83wW6SbB7hrQsisCMJZGoa3nQ/9L3FF4fdqpVMTjcVYvdIXeOuiNgmgYhNGXANBLTgksEeqxIPdw0GwdxqB3mmoMCcQ5oO33UJmVQiZlUG4K0OQNG9lbVgJkdHR2oZXdAch8/BbQ3s1a9zw/h5UPRQG6s5iNAsIHOzA7plG4LAMrG4ZrijIEkkruOuCyKwMIrMiVIxr9TtMFGaG3NCPuJ8/tYUFALXL09ddGG4JdrlFgP8Ct89pF2UJrK4u7IfmEGIAAAewSURBVEMcBLpnYB/qQEU83bF8wWux4K0LIrM2AHddEO7GADenbb8mKEzkrn60NywAqEN2HC38IIBDdGfxHdU6mTBwsAP7YAdWVxdWlQtlF/eTTVIW3E02vI2tD/vMOhvSzDf8faIw1/Ywckht/ae6o5D5WABQh+2YIHgvgEt0Z/E9C7AqXFhdXNjdMrCrXFhdMrAOcAvv2+kBXpMNd7MNb0Og9b+bA63d+cVdA2WDq4BJm5vLbx47fbqjOwz5Q6HdYiiPYuNHjBaFKRBU6c5SaFRIYHV2YVV6sCpcqEoPVqW748cDAmY+MSWl4G2zIU0WvG02vCYb3nYL3nYb3lYb4AhI9gk+AHBNtLb+H7qjkL+wAKD9MnviqG6u500VyHDdWYqJKpXWwqBEoCIerIgHRDyoiECVeLBKBCoirYVCUHYMMyiocDuewF7r4TgAAMeCuADSCl7CgiRV60/CgiT///+9FgvSZHM2fn4lAfnNluaK2/nWT/uC31bKisaJl/87POsuAD11Z6G9U7Z85QxISfMUeB95Fa41JjptxhLdQci/OJubsiI6aeZTJc3l/RRwGwBuNmI4cRUktfsPH/6+sA0KNyyu7HsOH/60v9gDQFk384aRJ1mWdy+AE3VnISogT7rwrh0+ZeYq3UGoMLAAoJxorKkOSVNwohLcBKBcdx4iH1sGUROitXWP6Q5ChYUFAOVUw08u72471i+h8ANwyImoI+IC/CFeGbr1+zUPJHWHocLDAoDyonHCiJMhmAbgTN1ZiAwnAGbBDUyMTntope4wVLhYAFDeCKBmjR8xVIA/ADhcdx4iA72t4N1QPWXmG7qDUOFjlyzljQKkekp9rKS5/FgBbgTQrDsTkRlkDRTGLq7sezof/pQv7AEgbRqvH91TApkaJRiFr6xKJyoKWwCZnLQCU0dPerhFdxgqLiwASLuGGy7vZSvrJihcDYCnwFAxaFbA/wS80K08rpd0YQFAxph5w7B+lrJvgsIIsBCgwtSigPscV343YlrDet1hqLixACDjzBo3vL+n1C8BDAXbKBWGNAQP2GLVDJk6Y53uMEQAb65ksJkTrjjVEqkBcCHYVsmfkgDudQPe74ffPnOt7jBEu+JNlYw3c/ywvjbsHwswBkBEdx6idvhcAfdlAt4dfPCTqVgAkG/UXz/8INtWP1LAdQAO0J2HaA8+hcIdJU3lfx48fXpcdxiir8MCgHyn8drqcpQER0AwAUBf3XmIAMxTwB2yyqmLxmI8DZN8gQUA+dZLNWcHNm7vMQSQCQBO1Z2Hio4L4HF4Mjk6tWGu7jBEHcUCgApC44QrjlUiowW4BhweoJySNQpqhqXwpyGT61foTkO0r1gAUEH5S82VkfLt6cGiMAaC88A2TtmRBvCsAh6SVc5sdvNTIeDNkQpW4/Ujj1a2930BrgJwoO485EsfC3B/0LL/ctmkhzfoDkOUTSwAqOA9fd2F4ZZAl0sFaiSUfBtASHcmMtoWBXnMU+rB6OT6Oar1eF6igsMCgIrKYzdc2TljpS8WoBrA+WAxQK22QfBXgcRUp8wz0ZpYWncgolxjAUBFq+7GEV1CaQzeUQxcACCoOxPlVQLACwqIRZrLZ3HdPhUbFgBEAGZPHNUt47lDAAwBcBbYM1CotojCMxYQE8/5W7Q2ltAdiEgXFgBEX/LEmDGl8bLmMyyFwQJcDKCX7ky0XxYr4AlP8PzWlvJXxk6f7ugORGQCFgBEe/HouBFHuBa+BcFgAN8CzyMwm8ImCF6EwvPwAk9Fax9aozsSkYlYABB1wBNjxpQmKrefo1zrPIE6A0pOAucO6LYdwFwBXheo56xV6be5Tp9o71gAEO2He8aMCXapaB4I4BsQnAmFcyGo0p2rwK0DME+A15SS17c0VbzFbn2ijmMBQJRFNTU11jHNS4+1vcyZIupMKJyM1gOLArqz+VQLgEUC9ZYl8oYVVK8Nub1ute5QRIWABQBRjt0zZkywqqypryh1rAf0V8DJAI4FcITubIZZh9ZT9RYBWKxE5nmrMx+xO58oN1gAEGnSeF31gSoYGugpGagER0HQCwq90brqoFAnGm4BsByCZWLJMgv4yIX1flpZi0dPerhFdziiYsICgMhAj94w8hDPyvQWsXtBeb0FqpcCegOqOyBVAKoA2JpjflkKwKYdPysEahmULFOeWg6RZUGEll869YGtmjMS0Q4sAIh8qnFc9QGesrpanlWlLKvKE1Qp5VUpUVWeUlUWPEugOrf+aQlDqVIAgKcqoCQABRuCSgAegG07fm0SCq2b4wi2AfAUVEZEmqCQFmCTpWSTeNYmsWSTAj63gc/dhLMpelesOd//BkRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERET74v8AvyUAR1XYE0AAAAAASUVORK5CYII=`;

const genaratePdfs = async (prompts:any,title:string,profile:any,imageUrls:any) => {
    const doc = new jsPDF();
    let pageWidth = doc.internal.pageSize.getWidth();
    let pageHeight = doc.internal.pageSize.getHeight();
  
  doc.setFontSize(20);
    doc.setFont("times", "italic");
    var titleSplit = doc.splitTextToSize(title, 200);
    
    doc.text(titleSplit,pageWidth/2, (pageHeight/2)-20,{align: "center"});
    doc.setFontSize(15);
    doc.setFont("times", "bold");
    doc.text("Author: "+profile.name,pageWidth/2, 145,{align: "center"});
    doc.text("Age: "+profile.age,pageWidth/2, 153,{align: "center"});
    let imgX = (pageWidth-50)/2;
    doc.addImage(logo, imgX , 165, 50, 50);

    let footer = "AI generated storybook by kiwi X aviato";
    doc.setFontSize(10);
   
    doc.text(footer,pageWidth/2, pageHeight-10, {align: "center"});

    for (let i = 0; i < prompts.length; i++) {
      doc.addPage();
      doc.setFontSize(16);
      let img = imageUrls[i];
      img = await urlTOBase64(img);
      var splitPrompt = doc.splitTextToSize(prompts[i].text, 180);
      doc.text(splitPrompt,15, 100);
      doc.setFontSize(10);
      doc.text(footer,pageWidth/2, pageHeight-10, {align: "center"});
      doc.addPage();
      doc.setFontSize(16);
      doc.addImage(img, "JPEG", 52, 74, 105, 148);
     
      doc.setFontSize(10);
     
      doc.text(footer,pageWidth/2, pageHeight-10, {align: "center"});
    }
    doc.save("a4.pdf");
    const file = doc.output("blob");
    
    const url = await uploadToFileFirebase(
      "a4.pdf"
    )
    return url;
   
}

const urlTOBase64 = async (url:string) => {
    const response = await fetch(url);
    const blob = await response.blob();
    const buffer = await blob.arrayBuffer();
    const base64 = Buffer.from(buffer).toString("base64");
    return base64;
}

function splitParagraph(paragraph:string) {
  // Split the paragraph into sentences
  var sentences = paragraph.split(/[.!?]/);

  // Initialize the parts
  var part1 = '';
  var part2 = '';
  var part3 = '';

  // Distribute the sentences into the three parts
  for (var i = 0; i < sentences.length; i++) {
    var sentence = sentences[i].trim();
    if (i < sentences.length / 3) {
      part1 += sentence + '.';
    } else if (i < (2 * sentences.length) / 3) {
      part2 += sentence + '.';
    } else {
      part3 += sentence + '.';
    }
  }

  // Trim any extra whitespace
  part1 = part1.trim();
  part2 = part2.trim();
  part3 = part3.trim();

  // Return the three parts
  return [part1, part2, part3];
}

